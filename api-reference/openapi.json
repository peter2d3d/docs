{
  "openapi": "3.1.0",
  "info": {
    "title": "FFmpeg Command API",
    "description": "API for running FFmpeg in a cloud environment",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.rendi.dev"
    }
  ],
  "paths": {
    "/v1/run-ffmpeg-command": {
      "post": {
        "tags": [
          "FFmpeg Commands"
        ],
        "summary": "Run FFmpeg Command",
        "description": "Submit an FFmpeg command for processing with input and output file specifications.",
        "operationId": "run_ffmpeg_command_v1_run_ffmpeg_command_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FFmpegCommandRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully submitted FFmpeg command",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandResponse"
                },
                "example": {
                  "command_id": "123e4567-e89b-12d3-a456-426614174000"
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid authorization key"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/run-multiple-ffmpeg-commands": {
      "post": {
        "tags": [
          "FFmpeg Commands"
        ],
        "summary": "Run Multiple FFmpeg Commands",
        "description": "Submit multiple FFmpeg commands based on the same input files for multiple processing.",
        "operationId": "run_multiple_ffmpeg_commands_v1_run_multiple_ffmpeg_commands_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FFmpegMutiplieCommandsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleCommandsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid authorization key"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/poll-command/{command_id}": {
      "get": {
        "tags": [
          "FFmpeg Commands"
        ],
        "summary": "Get Command Status",
        "description": "Get the status of a previously submitted FFmpeg command.",
        "operationId": "poll_command_v1_poll_command__command_id__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "command_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The UUID of the FFmpeg command to check status for",
              "title": "Command Id"
            },
            "description": "The UUID of the FFmpeg command to check status for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Invalid authorization key"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommandResponse": {
        "properties": {
          "command_id": {
            "type": "string",
            "format": "uuid",
            "title": "Command Id",
            "description": "Unique identifier for the submitted FFmpeg command",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "type": "object",
        "required": [
          "command_id"
        ],
        "title": "CommandResponse"
      },
      "CommandStatus": {
        "type": "string",
        "enum": [
          "QUEUED",
          "PROCESSING",
          "FAILED",
          "FAULTY_COMMAND",
          "SUCCESS",
          "TIME_OUT",
          "QUOTA_EXCEEDED"
        ],
        "title": "CommandStatus"
      },
      "CommandStatusResponse": {
        "properties": {
          "error_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details",
            "description": "Error details if the command failed",
            "example": "Command failed to complete"
          },
          "output_files": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Files",
            "description": "Dictionary mapping file aliases to their output file storage",
            "example": {
              "out_1": "https://storage.rendi.dev/123e4567-e89b-12d3-a456-426614174000/output.mp4"
            }
          },
          "status": {
            "$ref": "#/components/schemas/CommandStatus",
            "description": "Current status of the FFmpeg command",
            "example": "SUCCESS"
          },
          "processing_seconds": {
            "type": "number",
            "title": "Processing Seconds",
            "description": "Processing time, in seconds, since recieved the command",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "CommandStatusResponse",
        "example": {
          "output_files": {
            "out_1": "https://storage.rendi.dev/123e4567-e89b-12d3-a456-426614174000/output.mp4"
          },
          "processing_seconds": 2.37,
          "status": "SUCCESS"
        }
      },
      "FFmpegCommandRequest": {
        "properties": {
          "input_files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Input Files",
            "description": "Dictionary mapping file aliases to their storage paths, keys must start with 'in_'",
            "example": {
              "in_1": "s3://public-bucket/videos/first-video.mp4",
              "in_2": "s3://public-bucket/videos/second-video.mp4"
            }
          },
          "output_files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Output Files",
            "description": "Dictionary mapping file aliases to their desired output file names, keys must start with 'out_'",
            "example": {
              "out_1": "output_one.mp4",
              "out_2": "output_two.mp4"
            }
          },
          "ffmpeg_command": {
            "type": "string",
            "title": "Ffmpeg Command",
            "description": "FFmpeg command string using {{alias}} placeholders for input and output files",
            "example": "-i {{in_1}} -i {{in_2}} -filter_complex '[0:v][1:v]hstack=inputs=2[v]' -map '[v]' {{out_1}}"
          }
        },
        "type": "object",
        "required": [
          "input_files",
          "output_files",
          "ffmpeg_command"
        ],
        "title": "FFmpegCommandRequest",
        "example": {
          "ffmpeg_command": "-i {{in_1}} -i {{in_2}} -filter_complex '[0:v][1:v]hstack=inputs=2[v]' -map '[v]' {{out_1}}",
          "input_files": {
            "in_1": "s3://public-bucket/videos/first-video.mp4",
            "in_2": "s3://public-bucket/videos/second-video.mp4"
          },
          "output_files": {
            "out_1": "output.mp4"
          }
        }
      },
      "FFmpegMutiplieCommandsRequest": {
        "properties": {
          "input_files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Input Files",
            "description": "Dictionary mapping file aliases to their storage paths, keys must start with 'in_'",
            "example": {
              "in_1": "s3://public-bucket/videos/first-video.mp4",
              "in_2": "s3://public-bucket/videos/second-video.mp4"
            }
          },
          "output_files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Output Files",
            "description": "Dictionary mapping file aliases to their desired output file names, keys must start with 'out_'",
            "example": {
              "out_1": "output_one.mp4",
              "out_2": "output_two.mp4"
            }
          },
          "ffmpeg_commands": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ffmpeg Commands",
            "description": "FFmpeg commands list of strings using {{alias}} placeholders for input and output files",
            "example": [
              "-i {{in_1}} -vf scale=1280:720 {{out_1}}",
              "-i {{in_1}} -vf scale=1920:1080 {{out_2}}"
            ]
          }
        },
        "type": "object",
        "required": [
          "input_files",
          "output_files",
          "ffmpeg_commands"
        ],
        "title": "FFmpegMutiplieCommandsRequest",
        "example": {
          "ffmpeg_commands": [
            "-i {{in_1}} -vf scale=1280:720 {{out_1}}",
            "-i {{in_1}} -vf scale=1920:1080 {{out_2}}"
          ],
          "input_files": {
            "in_1": "s3://public-bucket/videos/input-video.mp4"
          },
          "output_files": {
            "out_1": "output_720.mp4",
            "out_2": "output_1080.mp4"
          }
        }
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MultipleCommandsResponse": {
        "properties": {
          "command_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Command Ids",
            "description": "List of unique identifiers for the submitted FFmpeg commands, order by original commands order",
            "example": [
              "123e4567-e89b-12d3-a456-426614174000",
              "987fcdeb-a89b-43d3-b456-789012345678"
            ]
          }
        },
        "type": "object",
        "required": [
          "command_ids"
        ],
        "title": "MultipleCommandsResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "description": "API key required for authentication. Must be provided in the X-API-KEY header.",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  }
}